{"version":3,"sources":["components/blogList.js","services/login.js","services/users.js","reducers/notificationReducer.js","components/userForm.js","components/togglable.js","services/blogs.js","reducers/userReducer.js","components/loginForm.js","reducers/blogReducer.js","hooks/formHook.js","components/blogForm.js","components/notification.js","components/userList.js","components/user.js","components/Blog.js","components/MenuBar.js","App.js","store.js","index.js"],"names":["BlogList","blogs","useSelector","state","className","Table","striped","map","blog","key","id","to","title","login","creds","a","axios","post","res","data","getAll","request","get","response","create","newUser","previousTimeout","setMessage","text","sleepTime","dispatch","type","clearTimeout","setTimeout","setError","reducer","action","variant","UserForm","useDispatch","useState","username","setUsername","password","setPassword","name","setName","addUser","event","preventDefault","user","userService","status","Form","onSubmit","Control","placeholder","value","onChange","target","Button","Togglable","React","forwardRef","props","ref","visible","setVisible","expanded","setExpanded","hideWhenVisible","display","showWhenVisible","toggleVisibility","toggleExpanded","useImperativeHandle","style","onClick","buttonLabel","children","displayName","token","newObject","config","headers","Authorization","update","link","put","catch","err","console","log","removeBlog","delete","setToken","newToken","createComment","comment","comments","loggedInUser","allUsers","blogService","window","localStorage","setItem","JSON","stringify","removeItem","LoginForm","history","useHistory","handleLogin","e","loginService","push","Group","deleteBlog","likeBlog","likes","newBlog","find","newState","sort","b","content","useField","setValue","reset","BlogForm","titleReset","authorReset","author","urlReset","url","createBlog","Notification","notification","Alert","UserList","users","length","User","border","padding","borderWidth","Blog","loggedInAs","confirm","addLike","Card","Header","href","_id","addComment","MenuBar","color","textAlign","textDecoration","App","useEffect","reverse","loggedUserJSON","getItem","parse","matchUser","useRouteMatch","userToRender","params","matchBlog","blogToRender","path","exact","combineReducers","blogReducer","notifiReducer","userReducer","Store","createStore","composeWithDevTools","applyMiddleware","thunk","store","ReactDOM","render","createBrowserHistory","document","getElementById"],"mappings":"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","file":"static/js/main.4d08e527.chunk.js","sourcesContent":["import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Table } from 'react-bootstrap'\n//\n// Calls the Blog renderer recursively to render all blogs in the list\n\nconst BlogList = () => {\n  const blogs = useSelector(state => state.blogs)\n  return(\n    <div className='blogList'>\n      <Table striped>\n        <tbody>\n          {blogs.map(blog =>\n            <tr key={blog.id}>\n              <td>\n                <Link to={`/blogs/${blog.id}`}>\n                  {blog.title}\n                </Link>\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n\nexport default BlogList","import axios from 'axios'\nconst baseUrl = '/api/login'\n\n\n// gets login credentials and retrieves the password hash for the username\nconst login = async creds => {\n  const res = await axios.post(baseUrl, creds)\n  return res.data\n}\n\nexport default { login }","import axios from 'axios'\nconst baseUrl = '/api/users'\n\n\n// returns all entries in database\nconst getAll = async () => {\n  const request = axios.get(baseUrl)\n  const response = await request\n  return response.data\n}\n\n\nconst create = async newUser => {\n  let response = await axios.post(baseUrl, newUser)\n  return response\n}\n\nexport default { create, getAll }","let previousTimeout = null\n\nconst reducer = (state = '', action) => {\n  switch(action.type){\n  case 'SET_MESSAGE': return { text: action.text,  variant:'success' }\n  case 'SET_ERROR': return { text: action.text, variant:'danger' }\n  case 'CLEAR_MESSAGE': return ''\n  default: return state\n  }\n}\n\n/* Action creators */\nexport const setMessage = (text, sleepTime=5000) => {\n  return async dispatch => {\n    dispatch({ type: 'SET_MESSAGE', text: text })\n    clearTimeout(previousTimeout)\n    previousTimeout = setTimeout(() => {dispatch({ type: 'CLEAR_MESSAGE' })}, sleepTime)\n  }\n}\n\nexport const setError = (text, sleepTime=5000) => {\n  return async dispatch => {\n    dispatch({ type: 'SET_ERROR', text: text })\n    clearTimeout(previousTimeout)\n    previousTimeout = setTimeout(() => {dispatch({ type: 'CLEAR_MESSAGE' })}, sleepTime)\n  }\n}\n\n\nexport default reducer","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport userService from '../services/users'\n\nimport  { setError, setMessage } from '../reducers/notificationReducer'\nimport { Form, Button } from 'react-bootstrap'\n//\n// renders new user form\n//\n\nconst UserForm = () => {\n\n  const dispatch = useDispatch()\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [name, setName] = useState('')\n  const handleUsername = (event) => setUsername(event.target.value)\n  const handlePassword = (event) => setPassword(event.target.value)\n  const handleName = (event) => setName(event.target.value)\n\n  // eventhandler for UserForm submit\n  // tries to call loginService.login to verify params against database\n  // if succesful sets the user, gives it a token and saves it in local storage.\n  const addUser = async (event) => {\n    event.preventDefault()\n    const user = {\n      username: username,\n      password: password,\n      name: name\n    }\n    setUsername(''); setPassword(''); setName('')\n    try {\n      const response = await userService.create(user)\n      if (response.status === 200) {\n        dispatch(setMessage('User created'))\n      }\n    } catch (exception) {\n      dispatch(setError('user creation failed'))\n    }\n  }\n\n  return (\n    <Form className='userCreateForm' onSubmit={addUser}>\n\n      <Form.Control\n        placeholder = 'New username'\n        value={username}\n        name=\"new username\"\n        onChange={handleUsername}\n      />\n\n      <Form.Control\n        placeholder = 'New Password'\n        value={password}\n        name=\"new password\"\n        onChange={handlePassword}\n      />\n\n\n      <Form.Control\n        placeholder = 'Name'\n        value={name}\n        name=\"new name\"\n        onChange={handleName}\n      />\n      <Button type=\"submit\">create new user</Button>\n    </Form>\n  )\n}\nexport default UserForm","import React, { useState, useImperativeHandle } from 'react'\nimport { Button } from 'react-bootstrap'\nimport PropTypes from 'prop-types'\n\n//\n// Enables the user to toggle the vicibility of its children\n//\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n  const [expanded, setExpanded] = useState(false)\n\n  // sets css property 'display' of children to none\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  const toggleExpanded = () => {\n    setExpanded(!expanded)\n  }\n\n  useImperativeHandle(ref, () => { return { toggleExpanded } })\n\n  return (\n    <span>\n      <span style={hideWhenVisible}>\n        <Button variant='info' onClick={toggleVisibility} className=\"infoEnable\">{props.buttonLabel}</Button>\n      </span>\n      <span style={showWhenVisible} className=\"togglableComponent\">\n        <Button variant='secondary' onClick={toggleVisibility} className=\"infoDisable\">hide</Button>\n        {props.children}\n      </span>\n    </span>\n  )\n})\n\nTogglable.displayName = 'Togglable'\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nexport default Togglable","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\n// sets authorization token for requests\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\n// returns all entries in database\nconst getAll = async () => {\n  const request = axios.get(baseUrl)\n  const response = await request\n  return response.data\n}\n\n\n// sets authorization header for POST request and\n// posts new object to database\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\n\n// enables editing existing entries in the database.\nconst update = async (id, newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const link = `${baseUrl}/${id}`\n  const response = await axios.put(link, newObject, config)\n    .catch(err => {\n      console.log('err', err)\n      console.log()\n      console.log('config.headers :>> ', config.headers)\n      console.log('newObject :>> ', newObject)\n    })\n  return response.data\n}\n\n\nconst removeBlog = async (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  await axios.delete(`${baseUrl}/${id}`, config)\n  return getAll()\n}\n\nconst createComment = async (id, comment) => {\n  const comments = await axios.post(`${baseUrl}/${id}/comments`, { comment })\n  return comments.data\n}\n\nexport default { getAll, create, update, setToken, removeBlog, createComment }","import blogService from '../services/blogs'\nimport userService from '../services/users'\n\nconst reducer = (state = { loggedInUser: null, allUsers: [] }, action) => {\n  switch (action.type){\n  case 'INIT_USERS': return { ...state, allUsers: action.data }\n\n  case 'RETRIEVE_USERS':\n    blogService.setToken(action.data.token)\n    return { ...state, loggedInUser: action.data }\n\n  case 'LOGIN':\n    window.localStorage.setItem('loggedInUser', JSON.stringify(action.data))\n    blogService.setToken(action.data.token)\n    return { ...state, loggedInUser: action.data }\n\n  case 'LOGOUT':\n    window.localStorage.removeItem('loggedInUser')\n    return { ...state, loggedInUser: null }\n\n  case 'CREATE_USER':\n    return state\n  default: return state\n  }\n}\n\n/* Action creators */\n\nexport const initializeUsers = () => {\n  return async dispatch => {\n    const users = await userService.getAll()\n    dispatch({\n      type: 'INIT_USERS',\n      data: users.sort((a, b) => a.blogs.length - b.blogs.length).reverse()\n    })\n  }\n}\n\nexport const login = (user) => {\n  return dispatch => {\n    dispatch({ type:'LOGIN', data: user })\n  }\n}\n\nexport const logout = () => {\n  return dispatch => {\n    dispatch({ type:'LOGOUT' })\n  }\n}\n\nexport const createUser = () => {\n  return async dispatch => {\n  }\n}\n\nexport const retrieveUser = (user) => {\n  return dispatch => {\n    dispatch({ type: 'RETRIEVE_USERS', data: user })\n  }\n}\n\n\nexport default reducer","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\n\nimport loginService from '../services/login'\n\nimport UserForm from '../components/userForm'\nimport Togglable from '../components/togglable'\n\nimport { login } from '../reducers/userReducer'\nimport  { setError, setMessage } from '../reducers/notificationReducer'\n\n//\n// Renders the login form\n//\n\nconst LoginForm = () => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  // eventhandler for LoginForm submit.\n  // tries to call loginService.login to verify params against database\n  // if succesful sets the user, gives it a token and saves it in local storage.\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    const e = event.target\n    try{\n      const user = await loginService.login({\n        username: e.username.value,\n        password: e.password.value\n      })\n      dispatch(login(user))\n      dispatch(setMessage('logged in'))\n      history.push('/')\n    }catch(err){\n      dispatch(setError('login failed'))\n    }\n  }\n\n  return (\n    <div className='login'>\n      <Form className='loginForm' onSubmit={handleLogin}>\n        <Form.Group>\n          <Form.Control name=\"username\" placeholder=\"Username\" /> <br/>\n          <Form.Control name=\"password\" placeholder=\"password\" type='password'/><br/>\n          <Button variant='primary' type=\"submit\">login</Button>\n        </Form.Group>\n      </Form>\n      <Togglable className='newUser' buttonLabel='create user'>\n        <h4>Create new user</h4>\n        <UserForm />\n      </Togglable>\n    </div>\n  )\n}\n\n\nexport default LoginForm","\nimport blogService from '../services/blogs'\n\nconst reducer = (state = [], action) => {\n  switch (action.type){\n  case 'INIT_BLOGS': return action.data\n  case 'CREATE_BLOG': return [...state, action.data]\n  case 'DELETE_BLOG': return action.data\n  case 'ADD_COMMENT':\n    const blog = state.find(blog => blog.id === action.data.blog)\n    const newBlog = { ...blog, comments: action.data.comments }\n    console.log('newBlog :>> ', newBlog)\n    const newState = state.map( blog => blog.id !== action.data.blog ?\n      blog : newBlog)\n    return newState\n  case 'LIKE_BLOG':\n    return state.map( blog => blog.id !== action.data.id ?\n      blog : action.data)\n      .sort((a,b) => a.content < b.content ? 1 : -1)\n      .sort((a,b) => a.likes < b.likes ? 1 : -1)\n  default: return state\n  }\n\n}\n\n/* Action creators */\n\nexport const initializeBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll()\n    dispatch({\n      type: 'INIT_BLOGS',\n      data: blogs.sort((a, b) => a.likes - b.likes).reverse()\n    })\n  }\n}\n\nexport const createBlog = (blog) => {\n  return async dispatch => {\n    const newBlog = await blogService.create(blog)\n    dispatch({ type:'CREATE_BLOG', data: newBlog })\n  }\n}\n\nexport const deleteBlog = (blog) => {\n  return async dispatch => {\n    const blogs = await blogService.removeBlog(blog.id)\n    dispatch({ type:'DELETE_BLOG', data: blogs })\n  }\n}\n\nexport const likeBlog = (blog) => {\n  return async dispatch => {\n    const newBlog = await blogService\n      .update(blog.id, { ...blog, likes: blog.likes + 1, user: blog.user.id })\n    dispatch({ type: 'LIKE_BLOG', data: { ...newBlog, user: blog.user } })\n  }\n}\n\nexport const addComment = (comment, blog) => {\n  return async dispatch => {\n    const comments = await blogService.createComment(blog.id, comment)\n    dispatch({ type: 'ADD_COMMENT', data: { blog: blog.id, comments } })\n  }\n}\n\nexport default reducer","import { useState } from 'react'\n\nexport const useField = (type, placeholder) => {\n  const [value, setValue] = useState('')\n\n  const onChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  const reset = () => {\n    setValue('')\n  }\n\n  return {\n    type,\n    value,\n    placeholder,\n    onChange,\n    reset\n  }\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Form, Button } from 'react-bootstrap'\n\nimport { setMessage } from '../reducers/notificationReducer'\nimport { createBlog } from '../reducers/blogReducer'\nimport { useField } from '../hooks/formHook'\n\n//\n// displays the form  the addition of new blogs\n//\n\n\n// Hndlr functions = ({ target }) => setAttribute(target.value)\nconst BlogForm = () => {\n  const dispatch = useDispatch()\n  const { reset: titleReset, ...title } = useField('text', 'title')\n  const { reset: authorReset, ...author } = useField('text', 'author')\n  const { reset: urlReset, ...url } = useField('text', 'url')\n\n  // event handler thats called when submit is pressed on BlogForm\n  // adds new blog to database and shows a notification to the user.\n  const addBlog = (event) => {\n    event.preventDefault()\n    const blog = {\n      title: title.value,\n      author: author.value,\n      url: url.value,\n      likes: 0\n    }\n    dispatch(createBlog(blog))\n    dispatch(setMessage('added new blog'))\n    titleReset()\n    authorReset()\n    urlReset()\n  }\n\n  return (\n    <span>\n      <Form className='blogForm' onSubmit={addBlog}>\n        <h3>Add new blog</h3>\n        <Form.Control {...title}/>\n        <Form.Control {...author}/>\n        <Form.Control {...url} />\n        <Button variant='primary' type=\"submit\">save</Button>\n      </Form>\n    </span>\n  )\n}\nexport default BlogForm","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Alert } from 'react-bootstrap'\n//\n// displays the errors and notifications to the user\n//\n\nconst Notification = () => {\n  const notification = useSelector(state => state.notification)\n  if (notification.text !== null) {\n    return (\n      <Alert variant={notification.variant}>\n        {notification.text}\n      </Alert>\n    )\n  } else { return (null) }\n}\n\nexport default Notification","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Table } from 'react-bootstrap'\n//\n// Calls the Blog renderer recursively to render all blogs in the list\n\nconst UserList = () => {\n  const users = useSelector(state => state.users.allUsers)\n  return(\n    <div className='userList'>\n      <h2>Users</h2>\n      <Table striped>\n        <thead>\n          <tr>\n            <th>Username</th>\n            <th>Blog Count</th>\n          </tr>\n        </thead>\n        <tbody>\n          {users.map(user =>\n            <tr key={user.username}>\n              <td>\n                <Link to={`/users/${user.username}`}>\n                  {user.username}\n                </Link>\n              </td>\n              <td>{user.blogs.length}</td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n\nexport default UserList","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Table } from 'react-bootstrap'\n\nconst User = ({ user }) => {\n  const style = {\n    border: 'solid',\n    padding: 5,\n    borderWidth: 1\n  }\n\n  if (!user){return null}\n  return(\n    <div className='blogList'>\n      <h1>Blogs added by {user.username}</h1>\n      <Table striped>\n        <tbody>\n          {user.blogs.map(blog =>\n            <tr key={blog.id}>\n              <td style={style}>\n                <Link to={`/blogs/${blog.id}`}>\n                  {blog.title}\n                </Link>\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n\nexport default User\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Button, Card, Form } from 'react-bootstrap'\nimport { likeBlog, deleteBlog, addComment } from '../reducers/blogReducer'\nimport { useField } from '../hooks/formHook'\n//\n//Renders a single blog in the list\n//\n\nconst Blog = ({ blog }) => {\n  const dispatch = useDispatch()\n  const { reset: commentReset, ...comment } = useField('text', 'comment')\n  const loggedInAs = useSelector(state => state.users.loggedInUser)\n\n  const removeBlog = async () => {\n    if (window.confirm(`delete blog ${blog.title}?`)) {\n      dispatch(deleteBlog(blog))\n    }\n  }\n\n  const addLike = async () => {\n    dispatch(likeBlog(blog))\n  }\n\n  const submitComment = () => {\n    dispatch(addComment(comment.value, blog))\n  }\n\n  if (!blog){return null}\n\n  return (\n    <div className='blog'>\n      <Card className='blogCard'>\n        <Card.Header>\n          <h1>{blog.title}</h1>\n          <Button className='cardBtn' variant='success' href={blog.url}>Source</Button>\n        </Card.Header>\n        <div className='inline'>\n          Likes: {blog.likes}\n          <Button className='cardBtn' onClick={addLike} id='likeBtn'>like</Button>\n        </div>\n        added by:{blog.user.username}\n        {loggedInAs.username === blog.user.username ? (\n          <span>\n            <Button variant='danger' onClick={removeBlog} >delete</Button><br />\n          </span>\n        )\n          : <div/>\n        }\n      </Card>\n      <div className='card' style={{ 'width': '60rem' }}>\n        <div className='card-header'><h3>Comments</h3></div>\n        <ul className=\"list-group list-group-flush\">\n          {blog.comments.map( comment =>\n            <li key={comment._id} className='list-group-item'>{comment.content}</li>\n          )}\n        </ul>\n      </div>\n      <Form>\n        <Form.Control {...comment}/>\n        <Button variant='success' onClick={submitComment}>Submit</Button>\n      </Form>\n    </div >\n  )\n}\n\nexport default Blog\n","import React from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport  { setMessage } from '../reducers/notificationReducer'\nimport { logout } from '../reducers/userReducer'\nimport { Button } from 'react-bootstrap'\n\nconst MenuBar = () => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const users = useSelector(state => state.users)\n\n  const padding = {\n    color: 'white',\n    padding: '14px 10px',\n    textAlign: 'center',\n    textDecoration: 'none',\n    display: 'inline-block',\n  }\n\n  // removes users token from local storage\n  const logOut = () => {\n    dispatch(logout())\n    dispatch(setMessage('logged out'))\n    history.push('/login')\n  }\n\n  const login = () => {\n    history.push('/login')\n  }\n\n  return (\n    <div className='topBar'>\n      <Link style={padding} to='/'><h2>Blogs</h2></Link>\n      <Link style={padding} to='/users'><h2>Users</h2></Link>\n      {users.loggedInUser ?\n        <span className='logged'>\n          {users.loggedInUser.username} logged in\n          <Button variant='danger' className='logBtn' onClick={logOut}>log out</Button>\n        </span>\n        :\n        <Button variant='success' className='logBtn'  onClick={login}>login</Button>}\n    </div>\n  )\n}\n\nexport default MenuBar","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  Switch,\n  Route,\n  useRouteMatch\n} from 'react-router-dom'\n/* COMPONENTS */\nimport BlogList from './components/blogList'\nimport LoginForm from './components/loginForm'\nimport BlogForm from './components/blogForm'\nimport Togglable from './components/togglable'\nimport Notification from './components/notification'\nimport UserList from './components/userList'\nimport User from './components/user'\nimport Blog from './components/Blog'\nimport MenuBar from './components/MenuBar'\n/* REDUCER ACTION CREATORS */\nimport  { initializeBlogs } from './reducers/blogReducer'\nimport { retrieveUser, initializeUsers } from './reducers/userReducer'\n\nconst App = () => {\n  const dispatch = useDispatch()\n  const users = useSelector(state => state.users)\n  const blogs = useSelector(state => state.blogs)\n\n  //effect loop to retrieve list of blogs from database.\n  useEffect(() => {\n    dispatch(initializeBlogs())\n    dispatch(initializeUsers())\n  },[dispatch])\n\n  // effect loop to retrieve logged in user from local storage\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedInUser')\n    if (loggedUserJSON) { dispatch(retrieveUser(JSON.parse(loggedUserJSON))) }\n  },[dispatch])\n\n  const matchUser = useRouteMatch('/users/:username')\n  const userToRender = matchUser ? users.allUsers\n    .find(a => a.username ===matchUser.params.username) : null\n\n  const matchBlog = useRouteMatch('/blogs/:id')\n  const blogToRender = matchBlog ? blogs.find(a => a.id === matchBlog.params.id) : null\n\n  return (\n    <span>\n      <MenuBar />\n      <div className='container'>\n        <Notification />\n        <Switch>\n          <Route path='/login'>\n            <LoginForm />\n          </Route>\n\n          <Route path='/' exact>\n            <div className='blogList'>\n              <h1>Blogs</h1>\n              <BlogList />\n            </div>\n          </Route>\n\n          <Route path='/users' exact>\n            <UserList />\n          </Route>\n\n          <Route path='/users/:username'>\n            <User user={userToRender} />\n          </Route>\n\n          <Route path='/blogs/:id'>\n            <Blog blog={blogToRender} />\n          </Route>\n        </Switch>\n      </div>\n\n      <Route path='/' exact>\n        <Togglable buttonLabel='add a new blog'>\n          <BlogForm />\n        </Togglable>\n      </Route>\n    </span>\n  )\n}\n\nexport default App","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport userReducer from './reducers/userReducer'\nimport blogReducer from './reducers/blogReducer'\nimport notifiReducer from './reducers/notificationReducer'\n\nconst reducer = combineReducers({\n  blogs: blogReducer,\n  notification: notifiReducer,\n  users: userReducer\n})\n\nconst Store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default Store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { createBrowserHistory } from 'history/createBrowserHistory'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport Store from './store'\nimport './index.css'\n\nconst store = Store\n\nReactDOM.render(\n  <Router history={createBrowserHistory}>\n    <Provider store={store} >\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root')\n)"],"sourceRoot":""}